@page "/users/register"
@inject IClient _httpClient
@inject NavigationManager _navManager
@rendermode InteractiveServer
<h3>Register</h3>

@if(!string.IsNullOrEmpty(message))
{
    <div class="alert alert-danger">
        <p>@message</p>
    </div>
}

<div>
    <EditForm Model="RegistrationModel" FormName="RegisterForm" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">
            <label for="email"> Email Address </label>
            <InputText Id="email" class="form-control" @bind-Value="RegistrationModel.Email" />
            <ValidationMessage For="@(() => RegistrationModel.Email)"/>
        </div>
        <div class="form-group">
            <label for="firstName"> First Name </label>
            <InputText Id="firstName" class="form-control" @bind-Value="RegistrationModel.FirstName" />
            <ValidationMessage For="@(() => RegistrationModel.FirstName)" />
        </div>
        <div class="form-group">
            <label for="lastName"> Last Name </label>
            <InputText Id="lastName" class="form-control" @bind-Value="RegistrationModel.LastName" />
            <ValidationMessage For="@(() => RegistrationModel.LastName)" />
        </div>
        <div class="form-group">
            <label for="password"> Password </label>
            <InputText Id="password" class="form-control" type="password" @bind-Value="RegistrationModel.Password" />
            <ValidationMessage For="@(() => RegistrationModel.Password)" />
        </div>
        <button type="submit" class="btn btn-primary btn-block">Register</button>

    </EditForm>
</div>

@code {
    private UserDto RegistrationModel = new UserDto
    {
        Role = "User"
    };
    string message = string.Empty;
    private async Task HandleRegistration()
    {

        try
        {
            await _httpClient.RegisterAsync(RegistrationModel);
            NavigateToLogin();

        }
        catch(ApiException ex)
        {
            if(ex.StatusCode >= 200 && ex.StatusCode <= 299)
            {
                NavigateToLogin();
            }
            message = ex.Message;
        }
        catch (Exception ex)
        {
            message = ex.Message;
        }
    }

    private void NavigateToLogin()
    {
        _navManager.NavigateTo("/users/login");
    }
}
